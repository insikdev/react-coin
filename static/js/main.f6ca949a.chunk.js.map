{"version":3,"sources":["styles/GlobalStyle.tsx","api.ts","components/Detail.tsx","components/Loader.tsx","components/MainContainer.tsx","components/MainTitle.tsx","routes/Coin.tsx","routes/Home.tsx","routes/Chart.tsx","routes/Price.tsx","components/Nav.tsx","Router.tsx","App.tsx","index.tsx","styles/theme.ts"],"names":["styled","reset","BASE_URL","fetchAllCoins","fetch","then","res","json","fetchHistory","id","a","endDate","Math","floor","Date","now","startDate","fetchExchangeRate","convertToMillion","labelValue","abs","Number","toFixed","ItemContainer","ul","ItemList","li","Label","span","Detail","rank","market_cap","total_supply","release_date","style","fontWeight","toLocaleString","getFullYear","getMonth","rotate360","keyframes","Container","div","Spinner","Loader","main","MainContainer","children","Title","nav","props","theme","titleColor","MainTitle","InfoContainer","section","InfoText","Tab","TabChildren","Link","Coin","state","useLocation","useParams","onChart","useMatch","onPrice","useQuery","fetchTicker","isLoading","ticker","data","Helmet","name","error","src","symbol","toLowerCase","alt","width","fontSize","color","margin","quotes","KRW","price","percent_change_24h","circulating_supply","first_data_at","to","Ul","hoverColor","CoinContainer","CoinSymbol","CoinName","Icon","img","Change24","isUp","upward","downward","Home","useState","page","setPage","slice","map","coin","USD","volume_24h","onClick","prev","Chart","historyLoading","rateLoading","currentRate","type","options","chart","toolbar","show","tooltip","enabled","xaxis","labels","format","yaxis","formatter","money","plotOptions","candlestick","colors","series","x","time_open","y","open","high","low","close","List","Price","padding","textAlign","transform","index","calculate","length","today","yesterday","round","display","getDate","Market","Nav","Router","basename","process","path","element","App","GlobalStyle","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.f6ca949a.chunk.js","sourcesContent":["import * as styled from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nexport default styled.createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-family: \"Roboto Slab\", serif;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n`;\r\n","const BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport const fetchAllCoins = () =>\r\n  fetch(`${BASE_URL}/tickers`).then((res) => res.json());\r\n\r\nexport const fetchTicker = (id: string) =>\r\n  fetch(`${BASE_URL}/tickers/${id}?quotes=KRW`).then((res) => res.json());\r\n\r\n// export const fetchInfo = (id: string) =>\r\n//   fetch(`${BASE_URL}/coins/${id}`).then((res) => res.json());\r\nexport const fetchHistory = async (id: string) => {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${id}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const fetchExchangeRate = () =>\r\n  fetch(`${BASE_URL}/tickers/usdt-tether?quotes=KRW`).then((res) => res.json());\r\n\r\nexport interface ITickers {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  quotes: {\r\n    USD: {\r\n      price: number;\r\n      percent_change_24h: number;\r\n      volume_24h: number;\r\n      market_cap: number;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface IExchange {\r\n  quotes: {\r\n    KRW: {\r\n      price: number;\r\n    };\r\n  };\r\n}\r\n\r\nexport const convertToMillion = (labelValue: number) =>\r\n  Math.abs(Number(labelValue)) >= 1.0e6\r\n    ? (Math.abs(Number(labelValue)) / 1.0e6).toFixed(2) + \"M\"\r\n    : Math.abs(Number(labelValue)) >= 1.0e3\r\n    ? (Math.abs(Number(labelValue)) / 1.0e3).toFixed(2) + \"K\"\r\n    : Math.abs(Number(labelValue));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  rank: number;\r\n  market_cap: number;\r\n  total_supply: number;\r\n  release_date: string;\r\n}\r\n\r\nconst ItemContainer = styled.ul`\r\n  margin: 20px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.li`\r\n  display: flex;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  width: 150px;\r\n  text-align: start;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Detail: React.FC<IProps> = ({\r\n  rank,\r\n  market_cap,\r\n  total_supply,\r\n  release_date,\r\n}) => (\r\n  <ItemContainer>\r\n    <ItemList>\r\n      <Label>시가총액 순위</Label>\r\n      <span>{rank}</span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>시가총액</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {Math.floor(market_cap / 1.0e12).toLocaleString(\"ko-KR\")}\r\n        조원\r\n      </span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>최초 발행</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {new Date(release_date).getFullYear()}년\r\n        {new Date(release_date).getMonth() + 1}월\r\n      </span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>현재 유통량</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {Math.floor(total_supply).toLocaleString(\"ko-KR\")}\r\n      </span>\r\n    </ItemList>\r\n  </ItemContainer>\r\n);\r\n\r\nexport default Detail;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 70vh;\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  animation: ${rotate360} 1s linear infinite;\r\n  transform: translateZ(0);\r\n\r\n  border-top: 2px solid grey;\r\n  border-right: 2px solid grey;\r\n  border-bottom: 2px solid grey;\r\n  border-left: 4px solid black;\r\n  background: transparent;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <Spinner />\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.main`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MainContainer: React.FC = ({ children }) => (\r\n  <Container>{children}</Container>\r\n);\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.nav`\r\n  font-weight: 600;\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.titleColor};\r\n  text-align: left;\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst MainTitle: React.FC = ({ children }) => <Title>{children}</Title>;\r\n\r\nexport default MainTitle;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  Link,\r\n  Outlet,\r\n  useLocation,\r\n  useMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchTicker } from \"../api\";\r\nimport Detail from \"../components/Detail\";\r\nimport Loader from \"../components/Loader\";\r\nimport MainContainer from \"../components/MainContainer\";\r\nimport MainTitle from \"../components/MainTitle\";\r\n\r\ninterface ITicker {\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  first_data_at: string;\r\n  quotes: {\r\n    KRW: {\r\n      price: number;\r\n      percent_change_24h: number;\r\n      market_cap: number;\r\n    };\r\n  };\r\n  error?: string;\r\n}\r\n\r\nconst InfoContainer = styled.section`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst InfoText = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst Tab = styled.nav`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TabChildren = styled(Link)`\r\n  background-color: ${(props) => props.theme.titleColor};\r\n  padding: 10px 50px;\r\n  border-radius: 10px;\r\n  color: white;\r\n`;\r\n\r\nconst Coin = () => {\r\n  const { state } = useLocation();\r\n  const { id } = useParams();\r\n  const onChart = useMatch(\"/:id/chart\");\r\n  const onPrice = useMatch(\"/:id/price\");\r\n\r\n  const { isLoading, data: ticker } = useQuery<ITicker>([id, \"ticker\"], () =>\r\n    fetchTicker(id!)\r\n  );\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Helmet>\r\n        <title>{state?.name ?? ticker?.name ?? \"Not Found\"}</title>\r\n      </Helmet>\r\n      <header>\r\n        <MainTitle>{state?.name ?? ticker?.name ?? \"Not Found\"}</MainTitle>\r\n      </header>\r\n      {isLoading || ticker?.error ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <InfoContainer>\r\n            <img\r\n              src={`https://cryptoicon-api.vercel.app/api/icon/${ticker?.symbol.toLowerCase()}`}\r\n              alt={ticker?.symbol}\r\n              style={{ width: 80 }}\r\n            />\r\n            <InfoText>\r\n              <div style={{ fontSize: 20, color: \"gray\" }}>\r\n                {ticker?.symbol}/KRW\r\n              </div>\r\n              <div>\r\n                <div style={{ fontSize: 32, margin: \"10px 0px\" }}>\r\n                  {ticker?.quotes.KRW.price! < 1\r\n                    ? ticker?.quotes.KRW.price.toFixed(2)\r\n                    : Math.floor(ticker?.quotes.KRW.price!).toLocaleString(\r\n                        \"ko-KR\"\r\n                      )}\r\n                  <span\r\n                    style={{\r\n                      fontSize: 24,\r\n                      color:\r\n                        ticker?.quotes?.KRW?.percent_change_24h! >= 0\r\n                          ? \"red\"\r\n                          : \"blue\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {ticker?.quotes.KRW.percent_change_24h}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </InfoText>\r\n          </InfoContainer>\r\n          <Detail\r\n            rank={ticker?.rank!}\r\n            market_cap={ticker?.quotes.KRW.market_cap!}\r\n            total_supply={ticker?.circulating_supply!}\r\n            release_date={ticker?.first_data_at!}\r\n          />\r\n\r\n          <Tab>\r\n            <TabChildren\r\n              to=\"chart\"\r\n              style={{ fontWeight: onChart ? \"bold\" : \"normal\" }}\r\n            >\r\n              차트\r\n            </TabChildren>\r\n            <TabChildren\r\n              to=\"price\"\r\n              style={{ fontWeight: onPrice ? \"bold\" : \"normal\" }}\r\n            >\r\n              시세\r\n            </TabChildren>\r\n          </Tab>\r\n          <Outlet />\r\n        </>\r\n      )}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  fetchAllCoins,\r\n  fetchExchangeRate,\r\n  IExchange,\r\n  ITickers,\r\n  convertToMillion,\r\n} from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\nimport MainContainer from \"../components/MainContainer\";\r\nimport MainTitle from \"../components/MainTitle\";\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 40px;\r\n  padding: 12px 16px;\r\n  background-color: ${(props) => props.theme.hoverColor};\r\n  div {\r\n    text-align: left;\r\n  }\r\n  div:first-child {\r\n    width: 30%;\r\n  }\r\n  div:nth-child(n + 2) {\r\n    width: 17.5%;\r\n  }\r\n`;\r\n\r\nconst CoinContainer = styled.li`\r\n  border-bottom: 1px solid;\r\n  border-bottom-color: ${(props) => props.theme.hoverColor};\r\n  padding: 0px 16px;\r\n  transition: background-color 0.3s ease-in, color 0.3s ease-in-out;\r\n  a {\r\n    padding: 20px 0px;\r\n    display: flex;\r\n    align-items: center;\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      font-size: 22px;\r\n    }\r\n    div:first-child {\r\n      width: 30%;\r\n    }\r\n    div:nth-child(n + 2) {\r\n      width: 17.5%;\r\n    }\r\n  }\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.hoverColor};\r\n  }\r\n`;\r\n\r\nconst CoinSymbol = styled.span`\r\n  margin: 0px 15px;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CoinName = styled.span`\r\n  font-size: 16px;\r\n  color: #7f8c8d;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nconst Change24 = styled.span<{ isUp: boolean }>`\r\n  color: ${(props) => (props.isUp ? props.theme.upward : props.theme.downward)};\r\n`;\r\n\r\nconst Home = () => {\r\n  const [page, setPage] = useState(1);\r\n  const { isLoading, data } = useQuery<ITickers[]>(\"coins\", fetchAllCoins);\r\n  const { data: exchange } = useQuery<IExchange>(\"exchange\", fetchExchangeRate);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Helmet>\r\n        <title>CRYPTO TRACKER</title>\r\n      </Helmet>\r\n      <header>\r\n        <MainTitle>Markets</MainTitle>\r\n      </header>\r\n      <Tab>\r\n        <div>Name</div>\r\n        <div>Price</div>\r\n        <div>24h Change</div>\r\n        <div>24h Volume</div>\r\n        <div>Market Cap</div>\r\n      </Tab>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Ul>\r\n          {data?.slice(20 * (page - 1), 20 * page).map((coin) => (\r\n            <CoinContainer key={coin.id}>\r\n              <Link\r\n                to={`${coin.id}/chart`}\r\n                state={{\r\n                  name: coin.name,\r\n                }}\r\n              >\r\n                <div>\r\n                  <Icon\r\n                    src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                    alt={coin.symbol}\r\n                  />\r\n                  <CoinSymbol>{coin.symbol}</CoinSymbol>\r\n                  <CoinName>{coin.name}</CoinName>\r\n                </div>\r\n                <div>\r\n                  <span>${coin.quotes.USD.price.toFixed(2)}</span>\r\n                </div>\r\n                <div>\r\n                  <Change24 isUp={coin.quotes.USD.percent_change_24h > 0}>\r\n                    {coin.quotes.USD.percent_change_24h > 0 && \"+\"}\r\n                    {coin.quotes.USD.percent_change_24h}%\r\n                  </Change24>\r\n                </div>\r\n                <div>\r\n                  <span>{convertToMillion(coin.quotes.USD.volume_24h)}</span>\r\n                </div>\r\n                <div>\r\n                  <span>${convertToMillion(coin.quotes.USD.market_cap)}</span>\r\n                </div>\r\n              </Link>\r\n            </CoinContainer>\r\n          ))}\r\n        </Ul>\r\n      )}\r\n      {page > 1 && (\r\n        <button onClick={() => setPage((prev) => prev - 1)}>prev</button>\r\n      )}\r\n\r\n      <button onClick={() => setPage((prev) => prev + 1)}>next</button>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import ApexCharts from \"react-apexcharts\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchExchangeRate, fetchHistory } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nexport interface IHistory {\r\n  time_open: Date;\r\n  time_close: Date;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n}\r\n\r\nexport interface IRate {\r\n  quotes: {\r\n    KRW: { price: number };\r\n  };\r\n}\r\n\r\nconst Chart = () => {\r\n  const { id } = useParams();\r\n  const { isLoading: historyLoading, data } = useQuery<IHistory[]>(\r\n    [id, \"history\"],\r\n    () => fetchHistory(id!)\r\n  );\r\n\r\n  const { isLoading: rateLoading, data: currentRate } = useQuery<IRate>(\r\n    \"rate\",\r\n    fetchExchangeRate\r\n  );\r\n\r\n  if (historyLoading || rateLoading || !data) return <Loader />;\r\n\r\n  return (\r\n    <ApexCharts\r\n      style={{ width: \"50%\", margin: \"auto\" }}\r\n      type=\"candlestick\"\r\n      options={{\r\n        chart: {\r\n          type: \"candlestick\",\r\n          toolbar: { show: false },\r\n        },\r\n        tooltip: { enabled: false },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n          labels: { format: \"MM/dd\" },\r\n        },\r\n        yaxis: {\r\n          tooltip: { enabled: true },\r\n          labels: {\r\n            formatter: (money) => money.toLocaleString(\"ko-KR\") + \"원\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          candlestick: {\r\n            colors: {\r\n              upward: \"#ff0000\",\r\n              downward: \"#0000ff\",\r\n            },\r\n          },\r\n        },\r\n      }}\r\n      series={[\r\n        {\r\n          data: data?.map((coin) => ({\r\n            x: coin.time_open,\r\n            y: [\r\n              Math.floor(coin.open * currentRate?.quotes.KRW.price!),\r\n              Math.floor(coin.high * currentRate?.quotes.KRW.price!),\r\n              Math.floor(coin.low * currentRate?.quotes.KRW.price!),\r\n              Math.floor(coin.close * currentRate?.quotes.KRW.price!),\r\n            ],\r\n          })),\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchExchangeRate, fetchHistory } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\nimport { IHistory, IRate } from \"./Chart\";\r\n\r\nconst Tab = styled.div`\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst List = styled.li`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  transform: rotate(-180deg);\r\n`;\r\n\r\nconst Price = () => {\r\n  const { id } = useParams();\r\n  const { isLoading: historyLoading, data } = useQuery<IHistory[]>(\r\n    [id, \"history\"],\r\n    () => fetchHistory(id!)\r\n  );\r\n\r\n  const { isLoading: rateLoading, data: currentRate } = useQuery<IRate>(\r\n    \"rate\",\r\n    fetchExchangeRate\r\n  );\r\n  if (historyLoading || rateLoading || !data) return <Loader />;\r\n\r\n  return (\r\n    <section style={{ padding: \"0px 20px\", width: \"50%\", margin: \"auto\" }}>\r\n      <Tab>\r\n        <div style={{ width: \"33%\", textAlign: \"start\" }}>일자</div>\r\n        <div style={{ width: \"33%\", textAlign: \"start\" }}>종가(KRW)</div>\r\n        <div style={{ width: \"33%\", textAlign: \"end\" }}>전일대비</div>\r\n      </Tab>\r\n      <ul style={{ transform: \"rotate(180deg)\" }}>\r\n        {data.map((coin, index) => {\r\n          let calculate = 0;\r\n          if (index !== 0 && index < data.length) {\r\n            const today = coin.close;\r\n            const yesterday = data[index - 1].close;\r\n            calculate = Math.round(((today - yesterday) / today) * 10000) / 100;\r\n          }\r\n          return (\r\n            <List key={index}>\r\n              <div\r\n                style={{ display: \"flex\", width: \"33%\", textAlign: \"center\" }}\r\n              >\r\n                <span>{new Date(coin.time_open).getMonth() + 1}</span>\r\n                <span>.</span>\r\n                <span>\r\n                  {new Date(coin.time_open).getDate() < 10\r\n                    ? \"0\" + new Date(coin.time_open).getDate()\r\n                    : new Date(coin.time_open).getDate()}\r\n                </span>\r\n              </div>\r\n              <span style={{ width: \"33%\", textAlign: \"start\" }}>\r\n                {Math.floor(\r\n                  coin.close * currentRate?.quotes.KRW.price!\r\n                ).toLocaleString(\"ko-KR\")}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  width: \"33%\",\r\n                  textAlign: \"end\",\r\n                  color:\r\n                    calculate === 0 ? \"black\" : calculate > 0 ? \"red\" : \"blue\",\r\n                }}\r\n              >\r\n                {index === 0 ? \"-\" : calculate + \"%\"}\r\n              </span>\r\n            </List>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Price;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.nav`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: ${(props) => props.theme.titleColor};\r\n  background-color: black;\r\n  padding: 28px;\r\n`;\r\n\r\nconst Market = styled(Link)`\r\n  margin-left: 50px;\r\n  font-weight: normal;\r\n  color: white;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <Title>\r\n      <Link to=\"/\">CRYPTO TRACKER</Link>\r\n      <Market to=\"/\">Markets</Market>\r\n    </Title>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Coin from \"./routes/Coin\";\r\nimport Home from \"./routes/Home\";\r\nimport Chart from \"./routes/Chart\";\r\nimport Price from \"./routes/Price\";\r\nimport Nav from \"./components/Nav\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Nav />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/:id\" element={<Coin />}>\r\n          <Route path=\"chart\" element={<Chart />} />\r\n          <Route path=\"price\" element={<Price />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport Router from \"./Router\";\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { lightTheme } from \"./styles/theme\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={lightTheme}>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  hoverColor: \"#ecf0f1\",\r\n  titleColor: \"#218c74\",\r\n  upward: \"#ff0000\",\r\n  downward: \"#0000ff\",\r\n};\r\n"],"sourceRoot":""}
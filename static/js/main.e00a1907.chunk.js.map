{"version":3,"sources":["GlobalStyle.tsx","api.ts","components/Detail.tsx","components/Loader.tsx","components/MainContainer.tsx","components/MainTitle.tsx","routes/Coin.tsx","routes/Home.tsx","routes/Chart.tsx","routes/Price.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["styled","reset","BASE_URL","fetchAllCoins","fetch","then","res","json","fetchCurrentExchangeRate","ItemContainer","ul","ItemList","li","Label","span","Detail","rank","market_cap","total_supply","release_date","style","fontWeight","Math","floor","toLocaleString","Date","getFullYear","getMonth","rotate360","keyframes","Container","div","Spinner","Loader","main","MainContainer","children","Title","h1","props","theme","titleColor","MainTitle","InfoContainer","section","InfoText","Coin","state","useLocation","id","useParams","useQuery","fetchTicker","isLoading","ticker","data","name","error","src","symbol","toLowerCase","alt","width","fontSize","color","margin","quotes","KRW","price","toFixed","percent_change_24h","circulating_supply","first_data_at","to","SubTitle","h3","Ul","CoinContainer","hoverColor","Price","Home","slice","map","coin","Chart","endDate","now","startDate","fetchHistory","historyLoading","rateLoading","currentRate","type","options","chart","toolbar","show","tooltip","enabled","xaxis","labels","format","yaxis","formatter","money","series","x","time_open","y","open","high","low","close","Router","basename","process","path","element","App","GlobalStyle","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.e00a1907.chunk.js","sourcesContent":["import * as styled from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nexport default styled.createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-family: \"Roboto Slab\", serif;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n`;\r\n","const BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport const fetchAllCoins = () =>\r\n  fetch(`${BASE_URL}/tickers?quotes=KRW`).then((res) => res.json());\r\n\r\nexport const fetchTicker = (id: string) =>\r\n  fetch(`${BASE_URL}/tickers/${id}?quotes=KRW`).then((res) => res.json());\r\n\r\n// export const fetchInfo = (id: string) =>\r\n//   fetch(`${BASE_URL}/coins/${id}`).then((res) => res.json());\r\nexport const fetchHistory = (id: string) => {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${id}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const fetchCurrentExchangeRate = () =>\r\n  fetch(`${BASE_URL}/tickers/usdt-tether?quotes=KRW`).then((res) => res.json());\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  rank: number;\r\n  market_cap: number;\r\n  total_supply: number;\r\n  release_date: string;\r\n}\r\n\r\nconst ItemContainer = styled.ul`\r\n  margin: 20px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.li`\r\n  display: flex;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  width: 150px;\r\n  text-align: start;\r\n`;\r\n\r\nconst Detail: React.FC<IProps> = ({\r\n  rank,\r\n  market_cap,\r\n  total_supply,\r\n  release_date,\r\n}) => (\r\n  <ItemContainer>\r\n    <ItemList>\r\n      <Label>시가총액 순위</Label>\r\n      <span>{rank}</span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>시가총액</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {Math.floor(market_cap / 1.0e12).toLocaleString(\"ko-KR\")}\r\n        조원\r\n      </span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>최초 발행</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {new Date(release_date).getFullYear()}년\r\n        {new Date(release_date).getMonth() + 1}월\r\n      </span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>현재 유통량</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {Math.floor(total_supply).toLocaleString(\"ko-KR\")}\r\n      </span>\r\n    </ItemList>\r\n  </ItemContainer>\r\n);\r\n\r\nexport default Detail;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 70vh;\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  animation: ${rotate360} 1s linear infinite;\r\n  transform: translateZ(0);\r\n\r\n  border-top: 2px solid grey;\r\n  border-right: 2px solid grey;\r\n  border-bottom: 2px solid grey;\r\n  border-left: 4px solid black;\r\n  background: transparent;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <Spinner />\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.main`\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  padding: 10px 20px 0px 20px;\r\n  border: 1px solid black;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst MainContainer: React.FC = ({ children }) => (\r\n  <Container>{children}</Container>\r\n);\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.titleColor}; ;\r\n`;\r\n\r\nconst MainTitle: React.FC = ({ children }) => <Title>{children}</Title>;\r\n\r\nexport default MainTitle;\r\n","import { useQuery } from \"react-query\";\r\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchTicker } from \"../api\";\r\nimport Detail from \"../components/Detail\";\r\nimport Loader from \"../components/Loader\";\r\nimport MainContainer from \"../components/MainContainer\";\r\nimport MainTitle from \"../components/MainTitle\";\r\n\r\ninterface ITicker {\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  first_data_at: string;\r\n  quotes: {\r\n    KRW: {\r\n      price: number;\r\n      percent_change_24h: number;\r\n      market_cap: number;\r\n    };\r\n  };\r\n  error?: string;\r\n}\r\n\r\nconst InfoContainer = styled.section`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst InfoText = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst Coin = () => {\r\n  const { state } = useLocation();\r\n  const { id } = useParams();\r\n\r\n  const { isLoading, data: ticker } = useQuery<ITicker>([id, \"ticker\"], () =>\r\n    fetchTicker(id!)\r\n  );\r\n\r\n  return (\r\n    <MainContainer>\r\n      <header>\r\n        <MainTitle>{state?.name ?? ticker?.name ?? \"Not Found\"}</MainTitle>\r\n      </header>\r\n      {isLoading || ticker?.error ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <InfoContainer>\r\n            <img\r\n              src={`https://cryptoicon-api.vercel.app/api/icon/${ticker?.symbol.toLowerCase()}`}\r\n              alt={ticker?.symbol}\r\n              style={{ width: 80 }}\r\n            />\r\n            <InfoText>\r\n              <div style={{ fontSize: 20, color: \"gray\" }}>\r\n                {ticker?.symbol}/KRW\r\n              </div>\r\n              <div>\r\n                <div style={{ fontSize: 32, margin: \"10px 0px\" }}>\r\n                  {ticker?.quotes.KRW.price! < 1\r\n                    ? ticker?.quotes.KRW.price.toFixed(2)\r\n                    : Math.floor(ticker?.quotes.KRW.price!).toLocaleString(\r\n                        \"ko-KR\"\r\n                      )}\r\n                  <span\r\n                    style={{\r\n                      fontSize: 24,\r\n                      color:\r\n                        ticker?.quotes?.KRW?.percent_change_24h! >= 0\r\n                          ? \"red\"\r\n                          : \"blue\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {ticker?.quotes.KRW.percent_change_24h}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </InfoText>\r\n          </InfoContainer>\r\n          <Detail\r\n            rank={ticker?.rank!}\r\n            market_cap={ticker?.quotes.KRW.market_cap!}\r\n            total_supply={ticker?.circulating_supply!}\r\n            release_date={ticker?.first_data_at!}\r\n          />\r\n\r\n          <Link to=\"chart\">chart</Link>\r\n          <Link to=\"price\">price</Link>\r\n          <Outlet />\r\n        </>\r\n      )}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchAllCoins } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\nimport MainContainer from \"../components/MainContainer\";\r\nimport MainTitle from \"../components/MainTitle\";\r\n\r\ninterface ITickers {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  quotes: {\r\n    KRW: {\r\n      price: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst SubTitle = styled.h3`\r\n  font-size: 22px;\r\n  color: gray;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CoinContainer = styled.li`\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-radius: 10px;\r\n  padding: 0px 2px;\r\n  margin: 8px 0px;\r\n  transition: background-color 0.3s ease-in, color 0.3s ease-in-out;\r\n  a {\r\n    padding: 20px 6px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.hoverColor};\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n  img {\r\n    margin-right: 10px;\r\n    width: 64px;\r\n    height: 64px;\r\n  }\r\n  span {\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n    width: fit-content;\r\n  }\r\n`;\r\n\r\nconst Price = styled.span`\r\n  flex: 1;\r\n  text-align: end;\r\n`;\r\n\r\nconst Home = () => {\r\n  const { isLoading, data } = useQuery<ITickers[]>(\"coins\", fetchAllCoins);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <header>\r\n        <MainTitle>CRYPTO TRACKER </MainTitle>\r\n        <SubTitle>using Coinpaprika API</SubTitle>\r\n      </header>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Ul>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <CoinContainer key={coin.id}>\r\n              <Link\r\n                to={coin.id}\r\n                state={{\r\n                  name: coin.name,\r\n                }}\r\n              >\r\n                <img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt={coin.symbol}\r\n                />\r\n                <span>{coin.name}</span>\r\n                <Price>\r\n                  {coin.quotes.KRW.price < 1\r\n                    ? coin.quotes.KRW.price.toFixed(2)\r\n                    : Math.floor(coin.quotes.KRW.price).toLocaleString(\r\n                        \"ko-KR\"\r\n                      )}{\" \"}\r\n                  KRW\r\n                </Price>\r\n              </Link>\r\n            </CoinContainer>\r\n          ))}\r\n        </Ul>\r\n      )}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import ApexCharts from \"react-apexcharts\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchCurrentExchangeRate, fetchHistory } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\n\r\ninterface IHistory {\r\n  time_open: Date;\r\n  time_close: Date;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n}\r\n\r\ninterface IRate {\r\n  quotes: {\r\n    KRW: { price: number };\r\n  };\r\n}\r\n\r\nconst Chart = () => {\r\n  const { id } = useParams();\r\n  const { isLoading: historyLoading, data } = useQuery<IHistory[]>(\r\n    [id, \"history\"],\r\n    () => fetchHistory(id!)\r\n  );\r\n\r\n  const { isLoading: rateLoading, data: currentRate } = useQuery<IRate>(\r\n    \"rate\",\r\n    fetchCurrentExchangeRate\r\n  );\r\n\r\n  const isLoading = historyLoading || rateLoading;\r\n  if (isLoading) return <Loader />;\r\n\r\n  return (\r\n    <div>\r\n      <ApexCharts\r\n        type=\"candlestick\"\r\n        width={\"100%\"}\r\n        options={{\r\n          chart: {\r\n            type: \"candlestick\",\r\n            toolbar: { show: false },\r\n          },\r\n          tooltip: { enabled: false },\r\n          xaxis: {\r\n            type: \"datetime\",\r\n            labels: { format: \"MM/dd\" },\r\n          },\r\n          yaxis: {\r\n            tooltip: { enabled: true },\r\n            labels: {\r\n              formatter: (money) => money.toLocaleString(\"ko-KR\") + \"원\",\r\n            },\r\n          },\r\n        }}\r\n        series={[\r\n          {\r\n            data: data?.map((coin) => ({\r\n              x: coin.time_open,\r\n              y: [\r\n                Math.floor(coin.open * currentRate?.quotes.KRW.price!),\r\n                Math.floor(coin.high * currentRate?.quotes.KRW.price!),\r\n                Math.floor(coin.low * currentRate?.quotes.KRW.price!),\r\n                Math.floor(coin.close * currentRate?.quotes.KRW.price!),\r\n              ],\r\n            })),\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","const Price = () => <h1>Price</h1>;\r\n\r\nexport default Price;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Coin from \"./routes/Coin\";\r\nimport Home from \"./routes/Home\";\r\nimport Chart from \"./routes/Chart\";\r\nimport Price from \"./routes/Price\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/:id\" element={<Coin />}>\r\n          <Route path=\"chart\" element={<Chart />} />\r\n          <Route path=\"price\" element={<Price />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport Router from \"./Router\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { lightTheme } from \"./theme\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={lightTheme}>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  hoverColor: \"#636e72\",\r\n  titleColor: \"#218c74\",\r\n};\r\n"],"sourceRoot":""}
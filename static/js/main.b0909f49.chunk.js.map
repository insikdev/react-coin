{"version":3,"sources":["GlobalStyle.tsx","api.ts","components/Detail.tsx","components/Loader.tsx","components/MainContainer.tsx","components/MainTitle.tsx","routes/Coin.tsx","routes/Home.tsx","routes/Chart.tsx","routes/Price.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["styled","reset","BASE_URL","fetchAllCoins","fetch","then","res","json","fetchHistory","id","a","endDate","Math","floor","Date","now","startDate","fetchCurrentExchangeRate","ItemContainer","ul","ItemList","li","Label","span","Detail","rank","market_cap","total_supply","release_date","style","fontWeight","toLocaleString","getFullYear","getMonth","rotate360","keyframes","Container","div","Spinner","Loader","main","MainContainer","children","Title","h1","props","theme","titleColor","MainTitle","InfoContainer","section","InfoText","Tab","nav","TabChildren","Link","Coin","state","useLocation","useParams","onChart","useMatch","onPrice","useQuery","fetchTicker","isLoading","ticker","data","Helmet","name","error","src","symbol","toLowerCase","alt","width","fontSize","color","margin","quotes","KRW","price","toFixed","percent_change_24h","circulating_supply","first_data_at","to","SubTitle","h3","Ul","CoinContainer","hoverColor","Price","Home","href","target","rel","slice","map","coin","Chart","historyLoading","rateLoading","currentRate","type","options","chart","toolbar","show","tooltip","enabled","xaxis","labels","format","yaxis","formatter","money","plotOptions","candlestick","colors","upward","downward","series","x","time_open","y","open","high","low","close","List","padding","textAlign","transform","index","calculate","length","today","yesterday","round","display","getDate","Router","basename","process","path","element","App","GlobalStyle","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.b0909f49.chunk.js","sourcesContent":["import * as styled from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nexport default styled.createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-family: \"Roboto Slab\", serif;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n`;\r\n","const BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport const fetchAllCoins = () =>\r\n  fetch(`${BASE_URL}/tickers?quotes=KRW`).then((res) => res.json());\r\n\r\nexport const fetchTicker = (id: string) =>\r\n  fetch(`${BASE_URL}/tickers/${id}?quotes=KRW`).then((res) => res.json());\r\n\r\n// export const fetchInfo = (id: string) =>\r\n//   fetch(`${BASE_URL}/coins/${id}`).then((res) => res.json());\r\nexport const fetchHistory = async (id: string) => {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${id}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const fetchCurrentExchangeRate = () =>\r\n  fetch(`${BASE_URL}/tickers/usdt-tether?quotes=KRW`).then((res) => res.json());\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  rank: number;\r\n  market_cap: number;\r\n  total_supply: number;\r\n  release_date: string;\r\n}\r\n\r\nconst ItemContainer = styled.ul`\r\n  margin: 20px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.li`\r\n  display: flex;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  width: 150px;\r\n  text-align: start;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Detail: React.FC<IProps> = ({\r\n  rank,\r\n  market_cap,\r\n  total_supply,\r\n  release_date,\r\n}) => (\r\n  <ItemContainer>\r\n    <ItemList>\r\n      <Label>시가총액 순위</Label>\r\n      <span>{rank}</span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>시가총액</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {Math.floor(market_cap / 1.0e12).toLocaleString(\"ko-KR\")}\r\n        조원\r\n      </span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>최초 발행</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {new Date(release_date).getFullYear()}년\r\n        {new Date(release_date).getMonth() + 1}월\r\n      </span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>현재 유통량</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {Math.floor(total_supply).toLocaleString(\"ko-KR\")}\r\n      </span>\r\n    </ItemList>\r\n  </ItemContainer>\r\n);\r\n\r\nexport default Detail;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 70vh;\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  animation: ${rotate360} 1s linear infinite;\r\n  transform: translateZ(0);\r\n\r\n  border-top: 2px solid grey;\r\n  border-right: 2px solid grey;\r\n  border-bottom: 2px solid grey;\r\n  border-left: 4px solid black;\r\n  background: transparent;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <Spinner />\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.main`\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  padding: 10px 20px 0px 20px;\r\n  border: 1px solid black;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst MainContainer: React.FC = ({ children }) => (\r\n  <Container>{children}</Container>\r\n);\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.titleColor}; ;\r\n`;\r\n\r\nconst MainTitle: React.FC = ({ children }) => <Title>{children}</Title>;\r\n\r\nexport default MainTitle;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  Link,\r\n  Outlet,\r\n  useLocation,\r\n  useMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchTicker } from \"../api\";\r\nimport Detail from \"../components/Detail\";\r\nimport Loader from \"../components/Loader\";\r\nimport MainContainer from \"../components/MainContainer\";\r\nimport MainTitle from \"../components/MainTitle\";\r\n\r\ninterface ITicker {\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  first_data_at: string;\r\n  quotes: {\r\n    KRW: {\r\n      price: number;\r\n      percent_change_24h: number;\r\n      market_cap: number;\r\n    };\r\n  };\r\n  error?: string;\r\n}\r\n\r\nconst InfoContainer = styled.section`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst InfoText = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst Tab = styled.nav`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TabChildren = styled(Link)`\r\n  background-color: ${(props) => props.theme.titleColor};\r\n  padding: 10px 50px;\r\n  border-radius: 10px;\r\n  color: white;\r\n`;\r\n\r\nconst Coin = () => {\r\n  const { state } = useLocation();\r\n  const { id } = useParams();\r\n  const onChart = useMatch(\"/:id/chart\");\r\n  const onPrice = useMatch(\"/:id/price\");\r\n\r\n  const { isLoading, data: ticker } = useQuery<ITicker>([id, \"ticker\"], () =>\r\n    fetchTicker(id!)\r\n  );\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Helmet>\r\n        <title>{state?.name ?? ticker?.name ?? \"Not Found\"}</title>\r\n      </Helmet>\r\n      <header>\r\n        <MainTitle>{state?.name ?? ticker?.name ?? \"Not Found\"}</MainTitle>\r\n      </header>\r\n      {isLoading || ticker?.error ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <InfoContainer>\r\n            <img\r\n              src={`https://cryptoicon-api.vercel.app/api/icon/${ticker?.symbol.toLowerCase()}`}\r\n              alt={ticker?.symbol}\r\n              style={{ width: 80 }}\r\n            />\r\n            <InfoText>\r\n              <div style={{ fontSize: 20, color: \"gray\" }}>\r\n                {ticker?.symbol}/KRW\r\n              </div>\r\n              <div>\r\n                <div style={{ fontSize: 32, margin: \"10px 0px\" }}>\r\n                  {ticker?.quotes.KRW.price! < 1\r\n                    ? ticker?.quotes.KRW.price.toFixed(2)\r\n                    : Math.floor(ticker?.quotes.KRW.price!).toLocaleString(\r\n                        \"ko-KR\"\r\n                      )}\r\n                  <span\r\n                    style={{\r\n                      fontSize: 24,\r\n                      color:\r\n                        ticker?.quotes?.KRW?.percent_change_24h! >= 0\r\n                          ? \"red\"\r\n                          : \"blue\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {ticker?.quotes.KRW.percent_change_24h}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </InfoText>\r\n          </InfoContainer>\r\n          <Detail\r\n            rank={ticker?.rank!}\r\n            market_cap={ticker?.quotes.KRW.market_cap!}\r\n            total_supply={ticker?.circulating_supply!}\r\n            release_date={ticker?.first_data_at!}\r\n          />\r\n\r\n          <Tab>\r\n            <TabChildren\r\n              to=\"chart\"\r\n              style={{ fontWeight: onChart ? \"bold\" : \"normal\" }}\r\n            >\r\n              차트\r\n            </TabChildren>\r\n            <TabChildren\r\n              to=\"price\"\r\n              style={{ fontWeight: onPrice ? \"bold\" : \"normal\" }}\r\n            >\r\n              시세\r\n            </TabChildren>\r\n          </Tab>\r\n          <Outlet />\r\n        </>\r\n      )}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchAllCoins } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\nimport MainContainer from \"../components/MainContainer\";\r\nimport MainTitle from \"../components/MainTitle\";\r\n\r\ninterface ITickers {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  quotes: {\r\n    KRW: {\r\n      price: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst SubTitle = styled.h3`\r\n  font-size: 22px;\r\n  color: gray;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CoinContainer = styled.li`\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-radius: 10px;\r\n  padding: 0px 2px;\r\n  margin: 8px 0px;\r\n  transition: background-color 0.3s ease-in, color 0.3s ease-in-out;\r\n  a {\r\n    padding: 20px 6px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.hoverColor};\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n  img {\r\n    margin-right: 10px;\r\n    width: 64px;\r\n    height: 64px;\r\n  }\r\n  span {\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n    width: fit-content;\r\n  }\r\n`;\r\n\r\nconst Price = styled.span`\r\n  flex: 1;\r\n  text-align: end;\r\n`;\r\n\r\nconst Home = () => {\r\n  const { isLoading, data } = useQuery<ITickers[]>(\"coins\", fetchAllCoins);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Helmet>\r\n        <title>CRYPTO TRACKER</title>\r\n      </Helmet>\r\n      <header>\r\n        <MainTitle>CRYPTO TRACKER </MainTitle>\r\n        <SubTitle>\r\n          <a\r\n            href=\"https://api.coinpaprika.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            using Coinpaprika API\r\n          </a>\r\n        </SubTitle>\r\n      </header>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Ul>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <CoinContainer key={coin.id}>\r\n              <Link\r\n                to={`${coin.id}/chart`}\r\n                state={{\r\n                  name: coin.name,\r\n                }}\r\n              >\r\n                <img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt={coin.symbol}\r\n                />\r\n                <span>{coin.name}</span>\r\n                <Price>\r\n                  {coin.quotes.KRW.price < 1\r\n                    ? coin.quotes.KRW.price.toFixed(2)\r\n                    : Math.floor(coin.quotes.KRW.price).toLocaleString(\"ko-KR\")}\r\n                  {\" KRW\"}\r\n                </Price>\r\n              </Link>\r\n            </CoinContainer>\r\n          ))}\r\n        </Ul>\r\n      )}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import ApexCharts from \"react-apexcharts\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchCurrentExchangeRate, fetchHistory } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nexport interface IHistory {\r\n  time_open: Date;\r\n  time_close: Date;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n}\r\n\r\nexport interface IRate {\r\n  quotes: {\r\n    KRW: { price: number };\r\n  };\r\n}\r\n\r\nconst Chart = () => {\r\n  const { id } = useParams();\r\n  const { isLoading: historyLoading, data } = useQuery<IHistory[]>(\r\n    [id, \"history\"],\r\n    () => fetchHistory(id!)\r\n  );\r\n\r\n  const { isLoading: rateLoading, data: currentRate } = useQuery<IRate>(\r\n    \"rate\",\r\n    fetchCurrentExchangeRate\r\n  );\r\n\r\n  if (historyLoading || rateLoading || !data) return <Loader />;\r\n\r\n  return (\r\n    <ApexCharts\r\n      type=\"candlestick\"\r\n      options={{\r\n        chart: {\r\n          type: \"candlestick\",\r\n          toolbar: { show: false },\r\n        },\r\n        tooltip: { enabled: false },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n          labels: { format: \"MM/dd\" },\r\n        },\r\n        yaxis: {\r\n          tooltip: { enabled: true },\r\n          labels: {\r\n            formatter: (money) => money.toLocaleString(\"ko-KR\") + \"원\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          candlestick: {\r\n            colors: {\r\n              upward: \"#ff0000\",\r\n              downward: \"#0000ff\",\r\n            },\r\n          },\r\n        },\r\n      }}\r\n      series={[\r\n        {\r\n          data: data?.map((coin) => ({\r\n            x: coin.time_open,\r\n            y: [\r\n              Math.floor(coin.open * currentRate?.quotes.KRW.price!),\r\n              Math.floor(coin.high * currentRate?.quotes.KRW.price!),\r\n              Math.floor(coin.low * currentRate?.quotes.KRW.price!),\r\n              Math.floor(coin.close * currentRate?.quotes.KRW.price!),\r\n            ],\r\n          })),\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCurrentExchangeRate, fetchHistory } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\nimport { IHistory, IRate } from \"./Chart\";\r\n\r\nconst Tab = styled.div`\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst List = styled.li`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  transform: rotate(-180deg);\r\n`;\r\n\r\nconst Price = () => {\r\n  const { id } = useParams();\r\n  const { isLoading: historyLoading, data } = useQuery<IHistory[]>(\r\n    [id, \"history\"],\r\n    () => fetchHistory(id!)\r\n  );\r\n\r\n  const { isLoading: rateLoading, data: currentRate } = useQuery<IRate>(\r\n    \"rate\",\r\n    fetchCurrentExchangeRate\r\n  );\r\n  if (historyLoading || rateLoading || !data) return <Loader />;\r\n\r\n  return (\r\n    <section style={{ padding: \"0px 20px\" }}>\r\n      <Tab>\r\n        <div style={{ width: \"33%\", textAlign: \"start\" }}>일자</div>\r\n        <div style={{ width: \"33%\", textAlign: \"start\" }}>종가(KRW)</div>\r\n        <div style={{ width: \"33%\", textAlign: \"end\" }}>전일대비</div>\r\n      </Tab>\r\n      <ul style={{ transform: \"rotate(180deg)\" }}>\r\n        {data.map((coin, index) => {\r\n          let calculate = 0;\r\n          if (index !== 0 && index < data.length) {\r\n            const today = coin.close;\r\n            const yesterday = data[index - 1].close;\r\n            calculate = Math.round(((today - yesterday) / today) * 10000) / 100;\r\n          }\r\n          return (\r\n            <List key={index}>\r\n              <div\r\n                style={{ display: \"flex\", width: \"33%\", textAlign: \"center\" }}\r\n              >\r\n                <span>{new Date(coin.time_open).getMonth() + 1}</span>\r\n                <span>.</span>\r\n                <span>\r\n                  {new Date(coin.time_open).getDate() < 10\r\n                    ? \"0\" + new Date(coin.time_open).getDate()\r\n                    : new Date(coin.time_open).getDate()}\r\n                </span>\r\n              </div>\r\n              <span style={{ width: \"33%\", textAlign: \"start\" }}>\r\n                {Math.floor(\r\n                  coin.close * currentRate?.quotes.KRW.price!\r\n                ).toLocaleString(\"ko-KR\")}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  width: \"33%\",\r\n                  textAlign: \"end\",\r\n                  color:\r\n                    calculate === 0 ? \"black\" : calculate > 0 ? \"red\" : \"blue\",\r\n                }}\r\n              >\r\n                {index === 0 ? \"-\" : calculate + \"%\"}\r\n              </span>\r\n            </List>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Price;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Coin from \"./routes/Coin\";\r\nimport Home from \"./routes/Home\";\r\nimport Chart from \"./routes/Chart\";\r\nimport Price from \"./routes/Price\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/:id\" element={<Coin />}>\r\n          <Route path=\"chart\" element={<Chart />} />\r\n          <Route path=\"price\" element={<Price />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport Router from \"./Router\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { lightTheme } from \"./theme\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={lightTheme}>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  hoverColor: \"#636e72\",\r\n  titleColor: \"#218c74\",\r\n};\r\n"],"sourceRoot":""}
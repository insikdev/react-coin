{"version":3,"sources":["styles/GlobalStyle.tsx","api.ts","components/Detail.tsx","components/Loader.tsx","components/MainContainer.tsx","components/MainTitle.tsx","routes/Coin.tsx","utils.ts","routes/Home.tsx","routes/Chart.tsx","routes/Price.tsx","components/Nav.tsx","Router.tsx","App.tsx","index.tsx","styles/theme.ts"],"names":["styled","reset","BASE_URL","fetchAllCoins","fetch","then","res","json","fetchHistory","id","a","endDate","Math","floor","Date","now","startDate","ItemContainer","ul","ItemList","li","Label","span","Detail","rank","market_cap","total_supply","release_date","style","fontWeight","toLocaleString","getFullYear","getMonth","rotate360","keyframes","Container","div","Spinner","Loader","main","MainContainer","children","Title","nav","props","theme","titleColor","MainTitle","SectionInfo","section","hoverColor","Tab","TabChildren","Link","SectionContainer","SectionColumn","Coin","state","useLocation","useParams","onChart","useMatch","onPrice","useQuery","fetchTicker","isLoading","ticker","data","fetchToday","today","Helmet","name","className","symbol","quotes","USD","price","toFixed","color","percent_change_24h","abs","high","low","to","circulating_supply","first_data_at","convertToMillion","labelValue","Number","Ul","CoinContainer","CoinSymbol","CoinName","Icon","img","Change24","isUp","upward","downward","Home","useState","page","setPage","slice","map","coin","src","toLowerCase","alt","volume_24h","onClick","prev","Chart","historyLoading","type","options","chart","toolbar","show","tooltip","enabled","xaxis","labels","format","yaxis","formatter","money","plotOptions","candlestick","colors","series","x","time_open","y","open","close","List","Price","padding","width","textAlign","transform","index","calculate","length","yesterday","round","display","justifyContent","getDate","minimumFractionDigits","maximumFractionDigits","Market","Nav","Router","basename","process","path","element","App","GlobalStyle","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.0ec2c7b4.chunk.js","sourcesContent":["import * as styled from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nexport default styled.createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-family: \"Roboto Slab\", serif;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n`;\r\n","const BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport const fetchAllCoins = () =>\r\n  fetch(`${BASE_URL}/tickers`).then((res) => res.json());\r\n\r\nexport const fetchTicker = (id: string) =>\r\n  fetch(`${BASE_URL}/tickers/${id}`).then((res) => res.json());\r\n\r\nexport const fetchHistory = async (id: string) => {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${id}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const fetchExchangeRate = () =>\r\n  fetch(`${BASE_URL}/tickers/usdt-tether?quotes=KRW`).then((res) => res.json());\r\n\r\nexport const fetchToday = (id: string) =>\r\n  fetch(`${BASE_URL}/coins/${id}/ohlcv/today`).then((res) => res.json());\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  rank: number;\r\n  market_cap: number;\r\n  total_supply: number;\r\n  release_date: string;\r\n}\r\n\r\nconst ItemContainer = styled.ul`\r\n  margin: 20px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n`;\r\n\r\nconst ItemList = styled.li`\r\n  display: flex;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  width: 150px;\r\n  text-align: start;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Detail: React.FC<IProps> = ({\r\n  rank,\r\n  market_cap,\r\n  total_supply,\r\n  release_date,\r\n}) => (\r\n  <ItemContainer>\r\n    <ItemList>\r\n      <Label>시가총액 순위</Label>\r\n      <span>{rank}</span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>시가총액</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {Math.floor(market_cap / 1.0e12).toLocaleString(\"ko-KR\")}\r\n        조원\r\n      </span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>최초 발행</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {new Date(release_date).getFullYear()}년\r\n        {new Date(release_date).getMonth() + 1}월\r\n      </span>\r\n    </ItemList>\r\n    <ItemList>\r\n      <Label>현재 유통량</Label>\r\n      <span style={{ fontWeight: \"bold\" }}>\r\n        {Math.floor(total_supply).toLocaleString(\"ko-KR\")}\r\n      </span>\r\n    </ItemList>\r\n  </ItemContainer>\r\n);\r\n\r\nexport default Detail;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 70vh;\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  animation: ${rotate360} 1s linear infinite;\r\n  transform: translateZ(0);\r\n\r\n  border-top: 2px solid grey;\r\n  border-right: 2px solid grey;\r\n  border-bottom: 2px solid grey;\r\n  border-left: 4px solid black;\r\n  background: transparent;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <Spinner />\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.main`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MainContainer: React.FC = ({ children }) => (\r\n  <Container>{children}</Container>\r\n);\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.nav`\r\n  font-weight: 600;\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.titleColor};\r\n  text-align: left;\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst MainTitle: React.FC = ({ children }) => <Title>{children}</Title>;\r\n\r\nexport default MainTitle;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  Link,\r\n  Outlet,\r\n  useLocation,\r\n  useMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchTicker, fetchToday } from \"../api\";\r\nimport Detail from \"../components/Detail\";\r\nimport Loader from \"../components/Loader\";\r\nimport MainContainer from \"../components/MainContainer\";\r\nimport MainTitle from \"../components/MainTitle\";\r\n\r\nconst SectionInfo = styled.section`\r\n  background-color: ${(props) => props.theme.hoverColor};\r\n  border-radius: 2px;\r\n  margin-bottom: 50px;\r\n  padding: 20px 0px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    span.title {\r\n      font-size: 30px;\r\n      font-weight: bold;\r\n    }\r\n    span.label {\r\n      color: gray;\r\n      font-size: 16px;\r\n      margin-bottom: 10px;\r\n    }\r\n    span.text {\r\n      font-size: 26px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tab = styled.nav`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TabChildren = styled(Link)`\r\n  background-color: ${(props) => props.theme.titleColor};\r\n  padding: 10px 60px;\r\n  border-radius: 10px;\r\n  color: white;\r\n`;\r\n\r\nconst SectionContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst SectionColumn = styled.section`\r\n  width: 40%;\r\n`;\r\n\r\nconst Coin = () => {\r\n  const { state } = useLocation();\r\n  const { id } = useParams();\r\n  const onChart = useMatch(\"/:id/chart\");\r\n  const onPrice = useMatch(\"/:id/price\");\r\n\r\n  const { isLoading, data: ticker } = useQuery<ITicker>([id, \"ticker\"], () =>\r\n    fetchTicker(id!)\r\n  );\r\n  const { data: today } = useQuery<IToday[]>([id, \"today\"], () =>\r\n    fetchToday(id!)\r\n  );\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Helmet>\r\n        <title>{state?.name ?? ticker?.name ?? \"Not Found\"}</title>\r\n      </Helmet>\r\n      <header>\r\n        <MainTitle>{state?.name ?? ticker?.name ?? \"Not Found\"}</MainTitle>\r\n      </header>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <SectionInfo>\r\n            <div>\r\n              <span className=\"title\">{ticker?.symbol}/USDT</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"label\">Price</span>\r\n              <span className=\"text\">\r\n                ${ticker?.quotes.USD.price.toFixed(2)}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className=\"label\">24h Change</span>\r\n              <span\r\n                className=\"text\"\r\n                style={{\r\n                  color:\r\n                    ticker?.quotes.USD.percent_change_24h! > 0 ? \"red\" : \"blue\",\r\n                }}\r\n              >\r\n                {ticker?.quotes.USD.percent_change_24h! > 0 ? \"▲\" : \"▼\"}\r\n                {Math.abs(\r\n                  (ticker?.quotes.USD.price! *\r\n                    ticker?.quotes.USD.percent_change_24h!) /\r\n                    100\r\n                ).toFixed(2)}{\" \"}\r\n                {ticker?.quotes.USD.percent_change_24h! > 0 ? \"+\" : null}\r\n                {ticker?.quotes.USD.percent_change_24h}%\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className=\"label\">Today High</span>\r\n              <span className=\"text\">${today && today[0].high.toFixed(2)}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"label\">Today Low</span>\r\n              <span className=\"text\">${today && today[0].low.toFixed(2)}</span>\r\n            </div>\r\n          </SectionInfo>\r\n          <SectionContainer>\r\n            <SectionColumn>\r\n              <Tab>\r\n                <TabChildren\r\n                  to=\"chart\"\r\n                  style={{ fontWeight: onChart ? \"bold\" : \"normal\" }}\r\n                >\r\n                  Chart\r\n                </TabChildren>\r\n                <TabChildren\r\n                  to=\"price\"\r\n                  style={{ fontWeight: onPrice ? \"bold\" : \"normal\" }}\r\n                >\r\n                  Price\r\n                </TabChildren>\r\n              </Tab>\r\n              <Outlet />\r\n            </SectionColumn>\r\n            <SectionColumn>\r\n              <Detail\r\n                rank={ticker?.rank!}\r\n                market_cap={ticker?.quotes.USD.market_cap!}\r\n                total_supply={ticker?.circulating_supply!}\r\n                release_date={ticker?.first_data_at!}\r\n              />\r\n            </SectionColumn>\r\n          </SectionContainer>\r\n        </>\r\n      )}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","export const convertToMillion = (labelValue: number) =>\r\n  Math.abs(Number(labelValue)) >= 1.0e6\r\n    ? (Math.abs(Number(labelValue)) / 1.0e6).toFixed(2) + \"M\"\r\n    : Math.abs(Number(labelValue)) >= 1.0e3\r\n    ? (Math.abs(Number(labelValue)) / 1.0e3).toFixed(2) + \"K\"\r\n    : Math.abs(Number(labelValue));\r\n","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchAllCoins, fetchExchangeRate } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\nimport MainContainer from \"../components/MainContainer\";\r\nimport MainTitle from \"../components/MainTitle\";\r\nimport { convertToMillion } from \"../utils\";\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 40px;\r\n  padding: 12px 16px;\r\n  background-color: ${(props) => props.theme.hoverColor};\r\n  div {\r\n    text-align: left;\r\n  }\r\n  div:first-child {\r\n    width: 30%;\r\n  }\r\n  div:nth-child(n + 2) {\r\n    width: 17.5%;\r\n  }\r\n`;\r\n\r\nconst CoinContainer = styled.li`\r\n  border-bottom: 1px solid;\r\n  border-bottom-color: ${(props) => props.theme.hoverColor};\r\n  padding: 0px 16px;\r\n  transition: background-color 0.3s ease-in, color 0.3s ease-in-out;\r\n  a {\r\n    padding: 20px 0px;\r\n    display: flex;\r\n    align-items: center;\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      font-size: 22px;\r\n    }\r\n    div:first-child {\r\n      width: 30%;\r\n    }\r\n    div:nth-child(n + 2) {\r\n      width: 17.5%;\r\n    }\r\n  }\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.hoverColor};\r\n  }\r\n`;\r\n\r\nconst CoinSymbol = styled.span`\r\n  margin: 0px 15px;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CoinName = styled.span`\r\n  font-size: 16px;\r\n  color: #7f8c8d;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nconst Change24 = styled.span<{ isUp: boolean }>`\r\n  color: ${(props) => (props.isUp ? props.theme.upward : props.theme.downward)};\r\n`;\r\n\r\nconst Home = () => {\r\n  const [page, setPage] = useState(1);\r\n  const { isLoading, data } = useQuery<ITickers[]>(\"coins\", fetchAllCoins);\r\n  // const { data: exchange } = useQuery<IExchange>(\"exchange\", fetchExchangeRate);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Helmet>\r\n        <title>CRYPTO TRACKER</title>\r\n      </Helmet>\r\n      <header>\r\n        <MainTitle>Markets</MainTitle>\r\n      </header>\r\n      <Tab>\r\n        <div>Name</div>\r\n        <div>Price</div>\r\n        <div>24h Change</div>\r\n        <div>24h Volume</div>\r\n        <div>Market Cap</div>\r\n      </Tab>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Ul>\r\n          {data?.slice(20 * (page - 1), 20 * page).map((coin) => (\r\n            <CoinContainer key={coin.id}>\r\n              <Link\r\n                to={`${coin.id}/chart`}\r\n                state={{\r\n                  name: coin.name,\r\n                }}\r\n              >\r\n                <div>\r\n                  <Icon\r\n                    src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                    alt={coin.symbol}\r\n                  />\r\n                  <CoinSymbol>{coin.symbol}</CoinSymbol>\r\n                  <CoinName>{coin.name}</CoinName>\r\n                </div>\r\n                <div>\r\n                  <span>${coin.quotes.USD.price.toFixed(2)}</span>\r\n                </div>\r\n                <div>\r\n                  <Change24 isUp={coin.quotes.USD.percent_change_24h > 0}>\r\n                    {coin.quotes.USD.percent_change_24h > 0 && \"+\"}\r\n                    {coin.quotes.USD.percent_change_24h}%\r\n                  </Change24>\r\n                </div>\r\n                <div>\r\n                  <span>{convertToMillion(coin.quotes.USD.volume_24h)}</span>\r\n                </div>\r\n                <div>\r\n                  <span>${convertToMillion(coin.quotes.USD.market_cap)}</span>\r\n                </div>\r\n              </Link>\r\n            </CoinContainer>\r\n          ))}\r\n        </Ul>\r\n      )}\r\n      <div>\r\n        {page > 1 ? (\r\n          <button onClick={() => setPage((prev) => prev - 1)}>prev</button>\r\n        ) : null}\r\n        {page < 100 ? (\r\n          <button onClick={() => setPage((prev) => prev + 1)}>next</button>\r\n        ) : null}\r\n      </div>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import ApexCharts from \"react-apexcharts\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchHistory } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst Chart = () => {\r\n  const { id } = useParams();\r\n  const { isLoading: historyLoading, data } = useQuery<IHistory[]>(\r\n    [id, \"history\"],\r\n    () => fetchHistory(id!)\r\n  );\r\n\r\n  if (historyLoading) return <Loader />;\r\n\r\n  return (\r\n    <ApexCharts\r\n      type=\"candlestick\"\r\n      options={{\r\n        chart: {\r\n          type: \"candlestick\",\r\n          toolbar: { show: false },\r\n        },\r\n        tooltip: { enabled: false },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n          labels: { format: \"MM/dd\" },\r\n        },\r\n        yaxis: {\r\n          tooltip: { enabled: true },\r\n          labels: {\r\n            formatter: (money) => money.toLocaleString(\"ko-KR\"),\r\n          },\r\n        },\r\n        plotOptions: {\r\n          candlestick: {\r\n            colors: {\r\n              upward: \"#ff0000\",\r\n              downward: \"#0000ff\",\r\n            },\r\n          },\r\n        },\r\n      }}\r\n      series={[\r\n        {\r\n          data: data?.map((coin) => ({\r\n            x: coin.time_open,\r\n            y: [\r\n              coin.open.toFixed(2),\r\n              coin.high.toFixed(2),\r\n              coin.low.toFixed(2),\r\n              coin.close.toFixed(2),\r\n            ],\r\n          })),\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchHistory } from \"../api\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst Tab = styled.div`\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst List = styled.li`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  transform: rotate(-180deg);\r\n`;\r\n\r\nconst Price = () => {\r\n  const { id } = useParams();\r\n  const { isLoading: historyLoading, data } = useQuery<IHistory[]>(\r\n    [id, \"history\"],\r\n    () => fetchHistory(id!)\r\n  );\r\n\r\n  if (historyLoading) return <Loader />;\r\n\r\n  return (\r\n    <section style={{ padding: \"0px 20px\", width: \"100%\" }}>\r\n      <Tab>\r\n        <div style={{ width: \"33%\", textAlign: \"center\" }}>일자</div>\r\n        <div style={{ width: \"33%\", textAlign: \"center\" }}>종가</div>\r\n        <div style={{ width: \"33%\", textAlign: \"center\" }}>전일대비</div>\r\n      </Tab>\r\n      <ul style={{ transform: \"rotate(180deg)\" }}>\r\n        {data?.map((coin, index) => {\r\n          let calculate = 0;\r\n          if (index !== 0 && index < data.length) {\r\n            const today = coin.close;\r\n            const yesterday = data[index - 1].close;\r\n            calculate = Math.round(((today - yesterday) / today) * 10000) / 100;\r\n          }\r\n          return (\r\n            <List key={index}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  width: \"33%\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <span>{new Date(coin.time_open).getMonth() + 1}</span>\r\n                <span>.</span>\r\n                <span>\r\n                  {new Date(coin.time_open).getDate() < 10\r\n                    ? \"0\" + new Date(coin.time_open).getDate()\r\n                    : new Date(coin.time_open).getDate()}\r\n                </span>\r\n              </div>\r\n              <span style={{ width: \"33%\", textAlign: \"center\" }}>\r\n                {coin.close.toLocaleString(\"ko-KR\", {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                })}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  width: \"33%\",\r\n                  textAlign: \"center\",\r\n                  color:\r\n                    calculate === 0 ? \"black\" : calculate > 0 ? \"red\" : \"blue\",\r\n                }}\r\n              >\r\n                {index === 0 ? \"-\" : calculate + \"%\"}\r\n              </span>\r\n            </List>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Price;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.nav`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: ${(props) => props.theme.titleColor};\r\n  background-color: black;\r\n  padding: 28px;\r\n`;\r\n\r\nconst Market = styled(Link)`\r\n  margin-left: 50px;\r\n  font-weight: normal;\r\n  color: white;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <Title>\r\n      <Link to=\"/\">CRYPTO TRACKER</Link>\r\n      <Market to=\"/\">Markets</Market>\r\n    </Title>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Coin from \"./routes/Coin\";\r\nimport Home from \"./routes/Home\";\r\nimport Chart from \"./routes/Chart\";\r\nimport Price from \"./routes/Price\";\r\nimport Nav from \"./components/Nav\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Nav />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/:id\" element={<Coin />}>\r\n          <Route path=\"chart\" element={<Chart />} />\r\n          <Route path=\"price\" element={<Price />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport Router from \"./Router\";\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { lightTheme } from \"./styles/theme\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={lightTheme}>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  hoverColor: \"#ecf0f1\",\r\n  titleColor: \"#218c74\",\r\n  upward: \"#ff0000\",\r\n  downward: \"#0000ff\",\r\n};\r\n"],"sourceRoot":""}